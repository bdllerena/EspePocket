<?xml version="1.0"?>
<doc>
    <assembly>
        <name>XFGloss.Droid</name>
    </assembly>
    <members>
        <member name="T:XFGloss.Droid.Utils.ThemeUtil">
            <summary>
            Helper class used to convert or retrieve various <see cref="T:Android.Graphics.Color"/> and dimension related 
            values.
            </summary>
        </member>
        <member name="M:XFGloss.Droid.Utils.ThemeUtil.DpToPx(Android.Content.Context,System.Int32)">
            <summary>
            Helper method used to convert from density-independent pixels to screen pixels using the provided context's
            display metrics setting.
            </summary>
            <returns>The screen pixel value for the provided density-independent pixel value</returns>
            <param name="context">The <see cref="T:Android.Content.Context"/> context to be used for the conversion</param>
            <param name="dp">The density-independent pixel value to be converted to an equivalent screen pixel value</param>
        </member>
        <member name="M:XFGloss.Droid.Utils.ThemeUtil.SpToPx(Android.Content.Context,System.Int32)">
            <summary>
            Helper method used to convert from scale-independent pixels to screen pixels using the provided context's
            display metrics setting.
            </summary>
            <returns>The screen pixel value for the provided scale-independent pixel value</returns>
            <param name="context">The <see cref="T:Android.Content.Context"/> context to be used for the conversion</param>
            <param name="sp">The scale-independent pixel value to be converted to an equivalent screen pixel value</param>
        </member>
        <member name="M:XFGloss.Droid.Utils.ThemeUtil.IntToColor(System.Int32)">
            <summary>
            Converts a 32-bit integer color value to an <see cref="T:Android.Graphics.Color"/> instance
            </summary>
            <returns>The converted <see cref="T:Android.Graphics.Color"/> value</returns>
            <param name="colorValue">The 32-bit integer color value to be converted</param>
        </member>
        <member name="M:XFGloss.Droid.Utils.ThemeUtil.ColorFromResourceId(Android.Content.Context,System.Int32,System.Int32)">
            <summary>
            Retrieves a 32-bit integer color value from the specified resource ID
            </summary>
            <returns>The specified resource ID's color value if found, the specified default value if not found</returns>
            <param name="context">The <see cref="T:Android.Content.Context"/> context to be used for the retrieval</param>
            <param name="resourceId">The resource ID to retrieve the value for</param>
            <param name="defaultValue">The default color value to return if the specified resource ID isn't found</param>
        </member>
        <member name="M:XFGloss.Droid.Utils.ThemeUtil.WindowBackground(Android.Content.Context,System.Int32)">
            <summary>
            Retrieves the window background 32-bit integer color value
            </summary>
            <returns>The window background color if found in the specified Context's resource, the specified default 
            value if not found</returns>
            <param name="context">The <see cref="T:Android.Content.Context"/> context to be used for the retrieval</param>
            <param name="defaultValue">The default color value to return if the specified resource ID isn't found</param>
        </member>
        <member name="M:XFGloss.Droid.Utils.ThemeUtil.TextColorPrimary(Android.Content.Context,System.Int32)">
            <summary>
            Retrieves the primary text color 32-bit integer color value
            </summary>
            <returns>The primary text color if found in the specified Context's resource, the specified default 
            value if not found</returns>
            <param name="context">The <see cref="T:Android.Content.Context"/> context to be used for the retrieval</param>
            <param name="defaultValue">The default color value to return if the specified resource ID isn't found</param>
        </member>
        <member name="M:XFGloss.Droid.Utils.ThemeUtil.TextColorSecondary(Android.Content.Context,System.Int32)">
            <summary>
            Retrieves the secondary text color 32-bit integer color value
            </summary>
            <returns>The secondary text color if found in the specified Context's resource, the specified default 
            value if not found</returns>
            <param name="context">The <see cref="T:Android.Content.Context"/> context to be used for the retrieval</param>
            <param name="defaultValue">The default color value to return if the specified resource ID isn't found</param>
        </member>
        <member name="M:XFGloss.Droid.Utils.ThemeUtil.ColorPrimary(Android.Content.Context,System.Int32)">
            <summary>
            Retrieves the primary color 32-bit integer color value
            </summary>
            <returns>The primary color if found in the specified Context's resource, the specified default 
            value if not found</returns>
            <param name="context">The <see cref="T:Android.Content.Context"/> context to be used for the retrieval</param>
            <param name="defaultValue">The default color value to return if the specified resource ID isn't found</param>
        </member>
        <member name="M:XFGloss.Droid.Utils.ThemeUtil.ColorPrimaryDark(Android.Content.Context,System.Int32)">
            <summary>
            Retrieves the primary dark 32-bit integer color value
            </summary>
            <returns>The primary dark color if found in the specified Context's resource, the specified default 
            value if not found</returns>
            <param name="context">The <see cref="T:Android.Content.Context"/> context to be used for the retrieval</param>
            <param name="defaultValue">The default color value to return if the specified resource ID isn't found</param>
        </member>
        <member name="M:XFGloss.Droid.Utils.ThemeUtil.ColorAccent(Android.Content.Context,System.Int32)">
            <summary>
            Retrieves the accent color 32-bit integer color value
            </summary>
            <returns>The accent color if found in the specified Context's resource, the specified default 
            value if not found</returns>
            <param name="context">The <see cref="T:Android.Content.Context"/> context to be used for the retrieval</param>
            <param name="defaultValue">The default color value to return if the specified resource ID isn't found</param>
        </member>
        <member name="M:XFGloss.Droid.Utils.ThemeUtil.ColorControlNormal(Android.Content.Context,System.Int32)">
            <summary>
            Retrieves the normal state control color 32-bit integer color value
            </summary>
            <returns>The normal state control color if found in the specified Context's resource, the specified default 
            value if not found</returns>
            <param name="context">The <see cref="T:Android.Content.Context"/> context to be used for the retrieval</param>
            <param name="defaultValue">The default color value to return if the specified resource ID isn't found</param>
        </member>
        <member name="M:XFGloss.Droid.Utils.ThemeUtil.ColorControlActivated(Android.Content.Context,System.Int32)">
            <summary>
            Retrieves the activated state control color 32-bit integer color value
            </summary>
            <returns>The activated state control color if found in the specified Context's resource, the specified default 
            value if not found</returns>
            <param name="context">The <see cref="T:Android.Content.Context"/> context to be used for the retrieval</param>
            <param name="defaultValue">The default color value to return if the specified resource ID isn't found</param>
        </member>
        <member name="M:XFGloss.Droid.Utils.ThemeUtil.ColorControlHighlight(Android.Content.Context,System.Int32)">
            <summary>
            Retrieves the highlighted state control color 32-bit integer color value
            </summary>
            <returns>The highlighted state control color if found in the specified Context's resource, the specified default 
            value if not found</returns>
            <param name="context">The <see cref="T:Android.Content.Context"/> context to be used for the retrieval</param>
            <param name="defaultValue">The default color value to return if the specified resource ID isn't found</param>
        </member>
        <member name="M:XFGloss.Droid.Utils.ThemeUtil.ColorButtonNormal(Android.Content.Context,System.Int32)">
            <summary>
            Retrieves the normal state button color 32-bit integer color value
            </summary>
            <returns>The normal state button color if found in the specified Context's resource, the specified default 
            value if not found</returns>
            <param name="context">The <see cref="T:Android.Content.Context"/> context to be used for the retrieval</param>
            <param name="defaultValue">The default color value to return if the specified resource ID isn't found</param>
        </member>
        <member name="M:XFGloss.Droid.Utils.ThemeUtil.SetLayerTint(Android.Graphics.Drawables.LayerDrawable,System.Int32,Android.Graphics.Color)">
            <summary>
            Helper method used to assign a tint color to the specified layer if it exists.
            </summary>
            <param name="drawable">Drawable.</param>
            <param name="index">Index.</param>
            <param name="color">Color.</param>
        </member>
        <member name="M:XFGloss.Droid.Utils.ThemeUtil.SetLayerTintList(Android.Graphics.Drawables.LayerDrawable,System.Int32,Android.Content.Res.ColorStateList)">
            <summary>
            Helper method used to assign a color state list to the specified layer if it exists.
            </summary>
            <param name="drawable">Drawable.</param>
            <param name="index">Index.</param>
            <param name="colorList">Color list.</param>
        </member>
        <member name="F:XFGloss.Droid.Utils.ThemeUtil.DefaultColorControlThumb">
            <summary>
            The default color for the control thumb.
            </summary>
        </member>
        <member name="F:XFGloss.Droid.Utils.ThemeUtil.DefaultColorControlThumbActivated">
            <summary>
            The default color for the control thumb when it is in the activated state.
            </summary>
        </member>
        <member name="P:XFGloss.Droid.Utils.ThemeUtil.DefaultColorControlTrack">
            <summary>
            The default color for the control track.
            </summary>
        </member>
        <member name="P:XFGloss.Droid.Utils.ThemeUtil.DefaultColorControlTrackActivated">
            <summary>
            The default color for the control track when it is in the activated state.
            </summary>
        </member>
        <member name="T:XFGloss.Droid.Renderers.DroidXFGlossCellRenderer">
            <summary>
            The Android platform-specific XFGlossRenderer base class used for all <see cref="T:Xamarin.Forms.Cell"/> types.
            </summary>
        </member>
        <member name="M:XFGloss.Droid.Renderers.DroidXFGlossCellRenderer.CreateNativeElement``1(System.String,``0)">
            <summary>
            Implementation of method required by the <see cref="T:XFGloss.IXFGlossRenderer"/> interface that the
            <see cref="T:XFGloss.IGradientRenderer"/> interface extends. Applies the passed 
            <see cref="T:XFGloss.XFGlossElement"/> properties to the Android cell controls.
            </summary>
            <param name="propertyName">The name of the XFGloss attached BindableProperty that changed</param>
            <param name="element">The <see cref="T:XFGloss.XFGlossElement"/> instance that changed</param>
            <typeparam name="TElement">The type <see cref="T:XFGloss.XFGlossElement"/> that changed</typeparam>
        </member>
        <member name="M:XFGloss.Droid.Renderers.DroidXFGlossCellRenderer.CanUpdate(System.String)">
            <summary>
            Implementation of method required by the <see cref="T:XFGloss.IXFGlossRenderer"/> interface that the
            <see cref="T:XFGloss.IGradientRenderer"/> interface extends. Indicates if there is an existing 
            implementation of the property specified by the propertyName parameter.
            </summary>
            <returns><c>true</c>, if an existing implementation is found, <c>false</c> otherwise.</returns>
            <param name="propertyName">The name of the XFGloss attached BindableProperty that changed</param>
        </member>
        <member name="M:XFGloss.Droid.Renderers.DroidXFGlossCellRenderer.RemoveNativeElement(System.String)">
            <summary>
            Implementation of method required by the <see cref="T:XFGloss.IXFGlossRenderer"/> interface that the
            <see cref="T:XFGloss.IGradientRenderer"/> interface extends. Removes any existing implementation of
            the property specified by the propertyName parameter.
            </summary>
            <param name="propertyName">The name of the XFGloss attached BindableProperty that changed</param>
        </member>
        <member name="M:XFGloss.Droid.Renderers.DroidXFGlossCellRenderer.UpdateRotation(System.String,System.Int32)">
            <summary>
            Implementation of method required by the <see cref="T:XFGloss.IGradientRenderer"/> interface. Updates
            the rotation angle being used by any existing implementation of the property specified by the propertyName
            parameter.
            </summary>
            <param name="propertyName">The name of the XFGloss attached BindableProperty that changed</param>
            <param name="rotation">The new rotation value, an integer number between 0 and 359</param>
        </member>
        <member name="M:XFGloss.Droid.Renderers.DroidXFGlossCellRenderer.UpdateSteps(System.String,XFGloss.GradientStepCollection)">
            <summary>
            Implementation of method required by the <see cref="T:XFGloss.IGradientRenderer"/> interface. Updates
            the gradient fill steps being used by any existing implementation of the property specified by the 
            propertyName parameter.
            </summary>
            <param name="propertyName">The name of the XFGloss attached BindableProperty that changed</param>
            <param name="steps">The new collection of <see cref="T:XFGloss.GradientStep"/> instances that specify the
            colors and positions of each step of the gradient fill</param>
        </member>
        <member name="M:XFGloss.Droid.Renderers.DroidXFGlossCellRenderer.GetBackgroundGradientDrawable(Android.Views.View)">
            <summary>
            Private helper method used to find and return a previously-created 
            <see cref="T:XFGloss.Droid.Drawables.XFGlossPaintDrawable"/> instance if found, null if not found.
            </summary>
            <returns>The background gradient drawable if found, null if not.</returns>
            <param name="nativeCell">The native Android view used to display the cell contents</param>
        </member>
        <member name="M:XFGloss.Droid.Renderers.DroidXFGlossCellRenderer.RemoveBackgroundGradientDrawable(Android.Views.View)">
            <summary>
            Private helper method used to remove any previously-created 
            <see cref="T:XFGloss.Droid.Drawables.XFGlossPaintDrawable"/> instance if found.
            </summary>
            <param name="nativeCell">The native Android view used to display the cell contents</param>
        </member>
        <member name="M:XFGloss.Droid.Renderers.DroidXFGlossCellRenderer.UpdateProperties(Xamarin.Forms.Cell,Android.Views.View)">
            <summary>
            Static method called by custom Xamarin.Forms renderers, used to direct the call to the cross-platform base 
            class and provide the required <see cref="T:XFGloss.XFGlossCellRenderer"/> factory method.
            </summary>
            <param name="cell">The associated <see cref="T:Xamarin.Forms.Cell"/> instance</param>
            <param name="nativeCell">The native Android view used to display the cell contents</param>
        </member>
        <member name="M:XFGloss.Droid.Renderers.DroidXFGlossCellRenderer.UpdateProperties(Xamarin.Forms.Cell,Android.Views.View,System.String)">
            <summary>
            Implementation of the cross-platform base class's abstract UpdateProperties method. Used to apply the
            XFGloss attached BindableProperty values for the property specified by the propertyName parameter.
            </summary>
            <param name="cell">The associated <see cref="T:Xamarin.Forms.Cell"/> instance</param>
            <param name="nativeCell">The native Android view used to display the cell contents</param>
            <param name="propertyName">The name of the XFGloss attached BindableProperty that changed</param>
        </member>
        <member name="T:XFGloss.Droid.Renderers.DroidXFGlossSwitchCellRenderer">
            <summary>
            The Android platform-specific XFGloss cell renderer class used for the <see cref="T:Xamarin.Forms.SwitchCell"/>
            class.
            </summary>
        </member>
        <member name="M:XFGloss.Droid.Renderers.DroidXFGlossSwitchCellRenderer.#ctor(Xamarin.Forms.BindableObject)">
            <summary>
            Initializes a new instance of the <see cref="T:XFGloss.Droid.Renderers.DroidXFGlossSwitchCellRenderer"/> 
            class.
            </summary>
            <param name="bindable">Bindable.</param>
        </member>
        <member name="M:XFGloss.Droid.Renderers.DroidXFGlossSwitchCellRenderer.UpdateProperties(Xamarin.Forms.Cell,Android.Views.View)">
            <summary>
            Static method called by the custom <see cref="T:Xamarin.Forms.SwitchCell"/> renderer, used to direct the 
            call to the cross-platform base class and provide the required 
            <see cref="T:XFGloss.XFGlossCellRenderer"/> factory method. Hides the
            <see cref="T:XFGloss.Droid.Renderers.DroidXFGlossCellRenderer"/> base class's implementation of this method.
            </summary>
            <param name="cell">The associated <see cref="T:Xamarin.Forms.Cell"/> instance</param>
            <param name="nativeCell">The native Android view used to display the cell contents</param>
        </member>
        <member name="M:XFGloss.Droid.Renderers.DroidXFGlossSwitchCellRenderer.ElementPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Override of the <see cref="T:XFGloss.Droid.Renderers.DroidXFGlossCellRenderer"/> base class's implementation
            of the ElementPropertyChanged method, checks the XFGloss properties that are unique to the 
            <see cref="T:Xamarin.Forms.SwitchCell"/> class.
            </summary>
            <param name="sender">The object instance the notification was received from</param>
            <param name="args">The PropertyChanged event arguments</param>
        </member>
        <member name="M:XFGloss.Droid.Renderers.DroidXFGlossSwitchCellRenderer.UpdateProperties(Xamarin.Forms.Cell,Android.Views.View,System.String)">
            <summary>
            Override of the <see cref="T:XFGloss.Droid.Renderers.DroidXFGlossCellRenderer"/> base class's implementation
            of the UpdateProperties method, applies XFGloss property changes that are unique to the 
            <see cref="T:Xamarin.Forms.SwitchCell"/> class.
            </summary>
            <param name="cell">Cell.</param>
            <param name="nativeCell">Native cell.</param>
            <param name="propertyName">Property name.</param>
        </member>
        <member name="T:XFGloss.Droid.Renderers.XFGlossEntryCellRenderer">
            <summary>
            Custom <see cref="T:Xamarin.Forms.EntryCellRenderer"/>-based renderer class used to apply the custom XFGloss
            properties to the Android platform-specific implementation
            </summary>
        </member>
        <member name="M:XFGloss.Droid.Renderers.XFGlossEntryCellRenderer.GetCellCore(Xamarin.Forms.Cell,Android.Views.View,Android.Views.ViewGroup,Android.Content.Context)">
            <summary>
            Override of the <see cref="T:Xamarin.Forms.Platform.Android.EntryCellRenderer"/> GetCellCore method, used to apply any custom 
            settings to the Android platform-specific cell display element.
            </summary>
            <returns>The Android platform-specific cell display element after applying any custom settings to it</returns>
            <param name="item">The <see cref="T:Xamarin.Forms.Cell"/> instance whose properties need to be transferred 
            from</param>
            <param name="convertView">A previously-created Android platform-specific display element if this cell has
            been rendered before</param>
            <param name="parent">The parent Android view container for the cell</param>
            <param name="context">The Android context that should be used for retrieving assets</param>
        </member>
        <member name="T:XFGloss.Droid.Renderers.XFGlossSwitchCellRenderer">
            <summary>
            Custom <see cref="T:SwitchCellRenderer"/>-based renderer class used to apply the custom XFGloss
            properties to the Android platform-specific implementation. This implementation may be superceded by the
            <see cref="T:XFGloss.Droid.Renderers.XFGlossSwitchCompatCellRenderer"/> implementation if the Android AppCompat
            library is being used, the app is being run on an older API, and the XFGloss.Droid.Library.UsingSwitchCompatCell
            boolean property is set to true when the XFGloss.Droid.Library.Init(...) method is executed by the app's main
            activity. 
            </summary>
        </member>
        <member name="M:XFGloss.Droid.Renderers.XFGlossSwitchCellRenderer.GetCellCore(Xamarin.Forms.Cell,Android.Views.View,Android.Views.ViewGroup,Android.Content.Context)">
            <summary>
            Override of the <see cref="T:Xamarin.Forms.Platform.Android.SwitchCellRenderer"/> GetCellCore method, used to apply any custom 
            settings to the Android platform-specific cell display element.
            </summary>
            <returns>The Android platform-specific cell display element after applying any custom settings to it</returns>
            <param name="item">The <see cref="T:Xamarin.Forms.Cell"/> instance whose properties need to be transferred 
            from</param>
            <param name="convertView">A previously-created Android platform-specific display element if this cell has
            been rendered before</param>
            <param name="parent">The parent Android view container for the cell</param>
            <param name="context">The Android context that should be used for retrieving assets</param>
        </member>
        <member name="T:XFGloss.Droid.Renderers.XFGlossTextCellRenderer">
            <summary>
            Custom <see cref="T:TextCellRenderer"/>-based renderer class used to apply the custom XFGloss
            properties to the Android platform-specific implementation
            </summary>
        </member>
        <member name="M:XFGloss.Droid.Renderers.XFGlossTextCellRenderer.GetCellCore(Xamarin.Forms.Cell,Android.Views.View,Android.Views.ViewGroup,Android.Content.Context)">
            <summary>
            Override of the <see cref="T:Xamarin.Forms.Platform.Android.TextCellRenderer"/> GetCellCore method, used to apply any custom 
            settings to the Android platform-specific cell display element.
            </summary>
            <returns>The Android platform-specific cell display element after applying any custom settings to it</returns>
            <param name="item">The <see cref="T:Xamarin.Forms.Cell"/> instance whose properties need to be transferred 
            from</param>
            <param name="convertView">A previously-created Android platform-specific display element if this cell has
            been rendered before</param>
            <param name="parent">The parent Android view container for the cell</param>
            <param name="context">The Android context that should be used for retrieving assets</param>
        </member>
        <member name="T:XFGloss.Droid.Renderers.XFGlossImageCellRenderer">
            <summary>
            Custom <see cref="T:ImageCellRenderer"/>-based renderer class used to apply the custom XFGloss
            properties to the Android platform-specific implementation
            </summary>
        </member>
        <member name="M:XFGloss.Droid.Renderers.XFGlossImageCellRenderer.GetCellCore(Xamarin.Forms.Cell,Android.Views.View,Android.Views.ViewGroup,Android.Content.Context)">
            <summary>
            Override of the <see cref="T:Xamarin.Forms.Platform.Android.ImageCellRenderer"/> GetCellCore method, used to apply any custom 
            settings to the Android platform-specific cell display element.
            </summary>
            <returns>The Android platform-specific cell display element after applying any custom settings to it</returns>
            <param name="item">The <see cref="T:Xamarin.Forms.Cell"/> instance whose properties need to be transferred 
            from</param>
            <param name="convertView">A previously-created Android platform-specific display element if this cell has
            been rendered before</param>
            <param name="parent">The parent Android view container for the cell</param>
            <param name="context">The Android context that should be used for retrieving assets</param>
        </member>
        <member name="T:XFGloss.Droid.Renderers.XFGlossViewCellRenderer">
            <summary>
            Custom <see cref="T:ViewCellRenderer"/>-based renderer class used to apply the custom XFGloss
            properties to the Android platform-specific implementation
            </summary>
        </member>
        <member name="M:XFGloss.Droid.Renderers.XFGlossViewCellRenderer.GetCellCore(Xamarin.Forms.Cell,Android.Views.View,Android.Views.ViewGroup,Android.Content.Context)">
            <summary>
            Override of the <see cref="T:Xamarin.Forms.Platform.Android.ViewCellRenderer"/> GetCellCore method, used to apply any custom 
            settings to the Android platform-specific cell display element.
            </summary>
            <returns>The Android platform-specific cell display element after applying any custom settings to it</returns>
            <param name="item">The <see cref="T:Xamarin.Forms.Cell"/> instance whose properties need to be transferred 
            from</param>
            <param name="convertView">A previously-created Android platform-specific display element if this cell has
            been rendered before</param>
            <param name="parent">The parent Android view container for the cell</param>
            <param name="context">The Android context that should be used for retrieving assets</param>
        </member>
        <member name="T:XFGloss.Droid.Renderers.XFGlossSwitchRenderer">
            <summary>
            The Android platform-specific Xamarin.Forms renderer used for all <see cref="T:Xamarin.Forms.Switch"/>
            derived classes.
            </summary>
        </member>
        <member name="M:XFGloss.Droid.Renderers.XFGlossSwitchRenderer.OnElementChanged(Xamarin.Forms.Platform.Android.ElementChangedEventArgs{Xamarin.Forms.Switch})">
            <summary>
            <see cref="T:Xamarin.Forms.Platform.Android.SwitchRenderer"/> override that is called whenever the associated
            <see cref="T:Xamarin.Forms.Switch"/> instance changes
            </summary>
            <param name="e"><see cref="T:Xamarin.Forms.Platform.Android.ElementChangedEventArgs"/> that specifies the
            previously and newly assigned <see cref="T:Xamarin.Forms.Switch"/> instances
            </param>
        </member>
        <member name="M:XFGloss.Droid.Renderers.XFGlossSwitchRenderer.OnElementPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            <see cref="T:Xamarin.Forms.Platform.Android.SwitchRenderer"/> override that is called whenever the
            <see cref="T:Xamarin.Forms.Switch.PropertyChanged"/> event is fired
            </summary>
            <param name="sender">Sender.</param>
            <param name="e">E.</param>
        </member>
        <member name="T:XFGloss.Droid.Renderers.XFGlossSwitchCompatRenderer">
            <summary>
            The Android platform-specific Xamarin.Forms renderer used for all <see cref="T:Xamarin.Forms.Switch"/>
            derived classes when the Android AppCompat library is being used.
            </summary>
        </member>
        <member name="M:XFGloss.Droid.Renderers.XFGlossSwitchCompatRenderer.OnElementChanged(Xamarin.Forms.Platform.Android.ElementChangedEventArgs{Xamarin.Forms.Switch})">
            <summary>
            <see cref="T:Xamarin.Forms.Platform.Android.AppCompat.SwitchRenderer"/> override that is called whenever the associated
            <see cref="T:Xamarin.Forms.Switch"/> instance changes
            </summary>
            <param name="e"><see cref="T:Xamarin.Forms.Platform.Android.ElementChangedEventArgs"/> that specifies the
            previously and newly assigned <see cref="T:Xamarin.Forms.Switch"/> instances
            </param>
        </member>
        <member name="M:XFGloss.Droid.Renderers.XFGlossSwitchCompatRenderer.OnElementPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            <see cref="T:Xamarin.Forms.Platform.Android.AppCompat.SwitchRenderer"/> override that is called whenever the
            <see cref="T:Xamarin.Forms.Switch.PropertyChanged"/> event is fired
            </summary>
            <param name="sender">Sender.</param>
            <param name="e">E.</param>
        </member>
        <member name="T:XFGloss.Droid.Renderers.XFGlossContentPageRenderer">
            <summary>
            The Android platform-specific Xamarin.Forms renderer used for all <see cref="T:Xamarin.Forms.ContentPage"/>
            derived classes. Also implements the <see cref="T:XFGloss.IGradientRenderer"/> interface to support the added
            BackgroundGradient XFGloss property.
            </summary>
        </member>
        <member name="M:XFGloss.Droid.Renderers.XFGlossContentPageRenderer.CreateNativeElement``1(System.String,``0)">
            <summary>
            Implementation of method required by the <see cref="T:XFGloss.IXFGlossRenderer"/> interface that the
            <see cref="T:XFGloss.IGradientRenderer"/> interface extends. Applies the passed 
            <see cref="T:XFGloss.XFGlossElement"/> properties to the Android view.
            </summary>
            <param name="propertyName">The name of the XFGloss attached BindableProperty that changed</param>
            <param name="element">The <see cref="T:XFGloss.XFGlossElement"/> instance that changed</param>
            <typeparam name="TElement">The type <see cref="T:XFGloss.XFGlossElement"/> that changed</typeparam>
        </member>
        <member name="M:XFGloss.Droid.Renderers.XFGlossContentPageRenderer.CanUpdate(System.String)">
            <summary>
            Implementation of method required by the <see cref="T:XFGloss.IXFGlossRenderer"/> interface that the
            <see cref="T:XFGloss.IGradientRenderer"/> interface extends. Indicates if there is an existing 
            implementation of the property specified by the propertyName parameter.
            </summary>
            <returns><c>true</c>, if an existing implementation is found, <c>false</c> otherwise.</returns>
            <param name="propertyName">The name of the XFGloss attached BindableProperty that changed</param>
        </member>
        <member name="M:XFGloss.Droid.Renderers.XFGlossContentPageRenderer.RemoveNativeElement(System.String)">
            <summary>
            Implementation of method required by the <see cref="T:XFGloss.IXFGlossRenderer"/> interface that the
            <see cref="T:XFGloss.IGradientRenderer"/> interface extends. Removes any existing implementation of
            the property specified by the propertyName parameter.
            </summary>
            <param name="propertyName">The name of the XFGloss attached BindableProperty that changed</param>
        </member>
        <member name="M:XFGloss.Droid.Renderers.XFGlossContentPageRenderer.UpdateRotation(System.String,System.Int32)">
            <summary>
            Implementation of method required by the <see cref="T:XFGloss.IGradientRenderer"/> interface. Updates
            the rotation angle being used by any existing implementation of the property specified by the propertyName
            parameter.
            </summary>
            <param name="propertyName">The name of the XFGloss attached BindableProperty that changed</param>
            <param name="rotation">The new rotation value, an integer number between 0 and 359</param>
        </member>
        <member name="M:XFGloss.Droid.Renderers.XFGlossContentPageRenderer.UpdateSteps(System.String,XFGloss.GradientStepCollection)">
            <summary>
            Implementation of method required by the <see cref="T:XFGloss.IGradientRenderer"/> interface. Updates
            the gradient fill steps being used by any existing implementation of the property specified by the 
            propertyName parameter.
            </summary>
            <param name="propertyName">The name of the XFGloss attached BindableProperty that changed</param>
            <param name="steps">The new collection of <see cref="T:XFGloss.GradientStep"/> instances that specify the
            colors and positions of each step of the gradient fill</param>
        </member>
        <member name="M:XFGloss.Droid.Renderers.XFGlossContentPageRenderer.CreateBackgroundGradientDrawable(XFGloss.Gradient)">
            <summary>
            Private helper method used to create a new <see cref="T:XFGloss.Droid.Drawables.XFGlossPaintDrawable"/> 
            instance and apply it to the <see cref="T:Xamarin.Forms.ContentPage.Background"/> property.
            </summary>
            <returns>The background <see cref="T:XFGloss.Droid.Drawables.XFGlossPaintDrawable"/> instance</returns>
            <param name="gradient">The <see cref="T:XFGloss.Gradient"/> instance to retrieve property values from</param>
        </member>
        <member name="M:XFGloss.Droid.Renderers.XFGlossContentPageRenderer.GetBackgroundGradientDrawable">
            <summary>
            Private helper method used to find and return a previously-created 
            <see cref="T:XFGloss.Droid.Drawables.XFGlossPaintDrawable"/> instance if found, null if not found.
            </summary>
            <returns>The background <see cref="T:XFGloss.Droid.Drawables.XFGlossPaintDrawable"/> instance</returns>
        </member>
        <member name="M:XFGloss.Droid.Renderers.XFGlossContentPageRenderer.RemoveBackgroundGradientDrawable">
            <summary>
            Private helper method used to remove any previously-created 
            <see cref="T:XFGloss.Droid.Drawables.XFGlossPaintDrawable"/> instance if found.
            </summary>
        </member>
        <member name="M:XFGloss.Droid.Renderers.XFGlossContentPageRenderer.Dispose(System.Boolean)">
            <summary>
            Dispose any created resources and prepare the instance for garbage collection
            </summary>
            <param name="disposing">If set to <c>true</c>, dispose any created resources</param>
        </member>
        <member name="M:XFGloss.Droid.Renderers.XFGlossContentPageRenderer.OnElementChanged(Xamarin.Forms.Platform.Android.ElementChangedEventArgs{Xamarin.Forms.Page})">
            <summary>
            <see cref="T:Xamarin.Forms.Platform.Android.PageRenderer"/> override that is called whenever the associated
            <see cref="T:Xamarin.Forms.ContentPage"/> instance changes
            </summary>
            <param name="e"><see cref="T:Xamarin.Forms.Platform.Android.ElementChangedEventArgs"/> that specifies the
            previously and newly assigned <see cref="T:Xamarin.Forms.ContentPage"/> instances
            </param>
        </member>
        <member name="M:XFGloss.Droid.Renderers.XFGlossContentPageRenderer.OnElementPropertyChanging(System.Object,Xamarin.Forms.PropertyChangingEventArgs)">
            <summary>
            Private event handler that is called whenever a <see cref="T:Xamarin.Forms.BindableObject.PropertyChanging"/> 
            event is fired.
            </summary>
            <param name="sender">Sender.</param>
            <param name="e">E.</param>
        </member>
        <member name="M:XFGloss.Droid.Renderers.XFGlossContentPageRenderer.OnElementPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            <see cref="T:Xamarin.Forms.Platform.Android.PageRenderer"/> override that is called whenever the
            <see cref="T:Xamarin.Forms.ContentPage.PropertyChanged"/> event is fired
            </summary>
            <param name="sender">Sender.</param>
            <param name="e">E.</param>
        </member>
        <member name="T:XFGloss.Droid.Renderers.XFGlossSliderRenderer">
            <summary>
            The Android platform-specific Xamarin.Forms renderer used for all <see cref="T:Xamarin.Forms.Slider"/>
            derived classes.
            </summary>
        </member>
        <member name="M:XFGloss.Droid.Renderers.XFGlossSliderRenderer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XFGloss.Droid.Renderers.XFGlossSliderRenderer"/> class.
            </summary>
        </member>
        <member name="M:XFGloss.Droid.Renderers.XFGlossSliderRenderer.OnElementChanged(Xamarin.Forms.Platform.Android.ElementChangedEventArgs{Xamarin.Forms.Slider})">
            <summary>
            <see cref="T:Xamarin.Forms.Platform.Android.SliderRenderer"/> override that is called whenever the associated
            <see cref="T:Xamarin.Forms.Slider"/> instance changes
            </summary>
            <param name="e"><see cref="T:Xamarin.Forms.Platform.Android.ElementChangedEventArgs"/> that specifies the
            previously and newly assigned <see cref="T:Xamarin.Forms.Slider"/> instances
            </param>
        </member>
        <member name="M:XFGloss.Droid.Renderers.XFGlossSliderRenderer.OnElementPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            <see cref="T:Xamarin.Forms.Platform.Android.SliderRenderer"/> override that is called whenever the
            <see cref="T:Xamarin.Forms.Slider.PropertyChanged"/> event is fired
            </summary>
            <param name="sender">Sender.</param>
            <param name="e">E.</param>
        </member>
        <member name="M:XFGloss.Droid.Renderers.XFGlossSliderRenderer.OnLayout(System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Handle the slider control layout
            </summary>
            <param name="changed">If set to <c>true</c> changed.</param>
            <param name="l">The left position</param>
            <param name="t">The top position</param>
            <param name="r">The right position</param>
            <param name="b">The bottom position</param>
        </member>
        <member name="M:XFGloss.Droid.Renderers.XFGlossSliderRenderer.Android#Widget#SeekBar#IOnSeekBarChangeListener#OnProgressChanged(Android.Widget.SeekBar,System.Int32,System.Boolean)">
            <summary>
            Method required for SeekBar.IOnSeekBarChangeListener implementation. Notifies us when the native control's
            value changes so we can transfer the new value back to the XF element.
            </summary>
            <param name="seekBar">Seek bar.</param>
            <param name="progress">Current progress value</param>
            <param name="fromUser">From User flag</param>
        </member>
        <member name="M:XFGloss.Droid.Renderers.XFGlossSliderRenderer.Android#Widget#SeekBar#IOnSeekBarChangeListener#OnStartTrackingTouch(Android.Widget.SeekBar)">
            <summary>
            Method required for SeekBar.IOnSeekBarChangeListener implementation
            </summary>
            <param name="seekBar">Seek bar.</param>
        </member>
        <member name="M:XFGloss.Droid.Renderers.XFGlossSliderRenderer.Android#Widget#SeekBar#IOnSeekBarChangeListener#OnStopTrackingTouch(Android.Widget.SeekBar)">
            <summary>
            Method required for SeekBar.IOnSeekBarChangeListener implementation
            </summary>
            <param name="seekBar">Seek bar.</param>
        </member>
        <member name="M:XFGloss.Droid.Renderers.XFGlossSliderRenderer.UpdateSliderProperties(System.String)">
            <summary>
            Private helper method used to apply the <see cref="T:Xamarin.Forms.Slider"/> properties to the native
            <see cref="T:Android.Widget.Seekbar"/> control.
            </summary>
            <param name="propertyName">Name of the <see cref="T:XFGloss.SliderGloss"/> property whose value changed</param>
        </member>
        <member name="T:XFGloss.Droid.Renderers.DroidXFGlossSwitchCompatCellRenderer">
            <summary>
            The Android platform-specific XFGloss cell renderer class used for the <see cref="T:Xamarin.Forms.SwitchCell"/>
            class IF the Android AppCompat library is being used and the XFGloss.Droid.Library.UsingSwitchCompatCell 
            property is true when the XFGloss.Droid.Library.Init(...) method is executed by the app's main activity.
            </summary>
        </member>
        <member name="M:XFGloss.Droid.Renderers.DroidXFGlossSwitchCompatCellRenderer.UpdateProperties(Xamarin.Forms.Cell,Android.Views.View)">
            <summary>
            Static method called by the custom <see cref="T:Xamarin.Forms.SwitchCell"/> renderer, used to direct the 
            call to the cross-platform base class and provide the required 
            <see cref="T:XFGloss.XFGlossCellRenderer"/> factory method. Hides the
            <see cref="T:XFGloss.Droid.Renderers.DroidXFGlossCellRenderer"/> base class's implementation of this method.
            </summary>
            <param name="cell">The associated <see cref="T:Xamarin.Forms.Cell"/> instance</param>
            <param name="nativeCell">The native Android view used to display the cell contents</param>
        </member>
        <member name="M:XFGloss.Droid.Renderers.DroidXFGlossSwitchCompatCellRenderer.ElementPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Override of the <see cref="T:XFGloss.Droid.Renderers.DroidXFGlossCellRenderer"/> base class's implementation
            of the ElementPropertyChanged method, checks the XFGloss properties that are unique to the 
            <see cref="T:Xamarin.Forms.SwitchCell"/> class.
            </summary>
            <param name="sender">The object instance the notification was received from</param>
            <param name="args">The PropertyChanged event arguments</param>
        </member>
        <member name="M:XFGloss.Droid.Renderers.DroidXFGlossSwitchCompatCellRenderer.UpdateProperties(Xamarin.Forms.Cell,Android.Views.View,System.String)">
            <summary>
            Override of the <see cref="T:XFGloss.Droid.Renderers.DroidXFGlossCellRenderer"/> base class's implementation
            of the UpdateProperties method, applies XFGloss property changes that are unique to the 
            <see cref="T:Xamarin.Forms.SwitchCell"/> class.
            </summary>
            <param name="cell">Cell.</param>
            <param name="nativeCell">Native cell.</param>
            <param name="propertyName">Property name.</param>
        </member>
        <member name="T:XFGloss.Droid.Renderers.SwitchCompatCellView">
            <summary>
            Helper class used by the <see cref="T:XFGloss.Droid.Renderers.DroidXFGlossSwitchCompatCellRenderer"/> class to house the accessory view
            used to display the <see cref="T:Android.Support.V7.Widget.SwitchCompat"/> control.
            </summary>
        </member>
        <member name="M:XFGloss.Droid.Renderers.SwitchCompatCellView.#ctor(Android.Content.Context,Xamarin.Forms.Cell)">
            <summary>
            Initializes a new instance of the <see cref="T:XFGloss.Droid.Renderers.SwitchCompatCellView"/> class.
            </summary>
            <param name="context">Context.</param>
            <param name="cell">Cell.</param>
        </member>
        <member name="P:XFGloss.Droid.Renderers.SwitchCompatCellView.Cell">
            <summary>
            Gets or sets the cell.
            </summary>
            <value>The cell.</value>
        </member>
        <member name="M:XFGloss.Droid.Renderers.SwitchCompatCellView.OnCheckedChanged(Android.Widget.CompoundButton,System.Boolean)">
            <summary>
            Handler for the cell's checked state being changed
            </summary>
            <param name="buttonView">Button view.</param>
            <param name="isChecked">If set to <c>true</c> is checked.</param>
        </member>
        <member name="T:XFGloss.Droid.Renderers.XFGlossSwitchCompatCellRenderer">
            <summary>
            Custom <see cref="T:Xamarin.Forms.CellRenderer"/>-based renderer class used to apply the custom XFGloss
            properties to the Android platform-specific implementation. This implementation supercedes the
            <see cref="T:XFGloss.Droid.Renderers.XFGlossSwitchCellRenderer"/> implementation if the Android AppCompat
            library is being used, the app is being run on an older API, and the XFGloss.Droid.Library.UsingSwitchCompatCell
            boolean property is set to true when the XFGloss.Droid.Library.Init(...) method is executed by the app's main
            activity. 
            </summary>
        </member>
        <member name="M:XFGloss.Droid.Renderers.XFGlossSwitchCompatCellRenderer.GetCellCore(Xamarin.Forms.Cell,Android.Views.View,Android.Views.ViewGroup,Android.Content.Context)">
            <summary>
            Override of the <see cref="T:Xamarin.Forms.Platform.Android.CellRenderer"/> GetCellCore method, used to apply any custom 
            settings to the Android platform-specific cell display element.
            </summary>
            <returns>The Android platform-specific cell display element after applying any custom settings to it</returns>
            <param name="item">The <see cref="T:Xamarin.Forms.Cell"/> instance whose properties need to be transferred 
            from</param>
            <param name="convertView">A previously-created Android platform-specific display element if this cell has
            been rendered before</param>
            <param name="parent">The parent Android view container for the cell</param>
            <param name="context">The Android context that should be used for retrieving assets</param>
        </member>
        <member name="M:XFGloss.Droid.Renderers.XFGlossSwitchCompatCellRenderer.OnCellPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Override of the <see cref="T:Xamarin.Forms.Platform.Android.CellRenderer"/> handler for cell property changes
            </summary>
            <param name="sender">Sender.</param>
            <param name="e">Cell property changed event arguments</param>
        </member>
        <member name="T:XFGloss.Droid.Extensions.XFGlossSwitchExtensions">
            <summary>
            Extension methods for the <see cref="T:Xamarin.Forms.Switch"/> control to apply the
            <see cref="T:Xamarin.Forms.Color"/> values to an Android Switch control
            </summary>
        </member>
        <member name="M:XFGloss.Droid.Extensions.XFGlossSwitchExtensions.UpdateColorProperty(Android.Widget.Switch,XFGloss.ISwitchGloss,System.String)">
            <summary>
            An extension method that applies all of the current properties defined by the passed
            <see cref="T:XFGloss.ISwitchGloss"/> interface implementation to the Android Switch control
            </summary>
            <param name="control">Control.</param>
            <param name="properties">Properties.</param>
            <param name="propertyName">Property name.</param>
        </member>
        <member name="M:XFGloss.Droid.Extensions.XFGlossSwitchExtensions.UpdateColorProperty(Android.Support.V7.Widget.SwitchCompat,XFGloss.ISwitchGloss,System.String)">
            <summary>
            An extension method that applies all of the current properties defined by the passed
            <see cref="T:XFGloss.ISwitchGloss"/> interface implementation to the Android SwitchCompat control
            </summary>
            <param name="control">Control.</param>
            <param name="properties">Properties.</param>
            <param name="propertyName">Property name.</param>
        </member>
        <member name="M:XFGloss.Droid.Extensions.XFGlossSwitchExtensions.ApplyColorProperty``1(``0,XFGloss.ISwitchGloss,System.String)">
            <summary>
            Internal method used to do the work on behalf of the UpdateColorProperty extension method for both
            XFGlossSwitchExtensions and XFGlossSwitchCompatExtensions
            </summary>
            <param name="control">Control.</param>
            <param name="properties">Properties.</param>
            <param name="propertyName">Property name.</param>
            <typeparam name="TControl">The 1st type parameter.</typeparam>
        </member>
        <member name="T:XFGloss.Droid.Extensions.XFGlossGradientExtensions">
            <summary>
            Extension methods for the <see cref="T:XFGloss.Gradient"/> class to convert <see cref="T:Xamarin.Forms.Color"/>
            and step percentage values to Android-specific data values.
            </summary>
        </member>
        <member name="M:XFGloss.Droid.Extensions.XFGlossGradientExtensions.ToAndroidColorValues(XFGloss.Gradient)">
            <summary>
            Converts each of the <see cref="T:XFGloss.Gradient"/> steps' <see cref="T:Xamarin.Forms.Color"/> values to
            Android color values
            </summary>
            <returns>An array of Android color values</returns>
            <param name="self">The <see cref="T:XFGloss.Gradient"/> instance to apply the method to</param>
        </member>
        <member name="M:XFGloss.Droid.Extensions.XFGlossGradientExtensions.ToAndroidPercentages(XFGloss.Gradient)">
            <summary>
            Converts each of the <see cref="T:XFGloss.Gradient"/> steps' percentage values to Android step values
            </summary>
            <returns>An array of floats that represents the <see cref="T:XFGloss.Gradient"/> steps' percentages</returns>
            <param name="self">The <see cref="T:XFGloss.Gradient"/> instance to apply the method to</param>
        </member>
        <member name="T:XFGloss.Droid.Library">
            <summary>
            Library class used to provide static initializer to be called from XFGloss Android client projects to insure
            the XFGloss library is included in the client project's build.
            </summary>
        </member>
        <member name="P:XFGloss.Droid.Library.UsingAppCompat">
            <summary>
            Specifies if the Android AppCompat library is being used
            </summary>
            <value><c>true</c> if using AppCompat; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:XFGloss.Droid.Library.UsingSwitchCompatCell">
            <summary>
            Gets or sets a value indicating whether the regular XF SwitchCell should use the custom XFGloss
            SwitchCompatCellRenderer so the cell's Switch component will have the material design style. This property
            is set to true by default. Set it to false if you do NOT want the SwitchCompat new style look in older
            (pre-21) Android systems. This value is checked when the Init method is executed. It must be changed to
            false prior to calling the Init method if you don't want the SwitchCompatCellRenderer to be used.
            </summary>
            <value><c>true</c> if using the SwitchCompatCellRenderer; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:XFGloss.Droid.Library.UsingAppCompatAlpha">
            <summary>
            Gets or sets a value indicating if the alpha value of colors should be forced when applied via the
            AppCompat library on API levels older than API 21. This feature is disabled by default as most devices
            running a pre-21 API are low powered and may have noticeably poor performance when translucent (partially
            opaque) color values are applied to on screen elements.
            </summary>
            <value><c>true</c> if AppCompat alpha values should be forced; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:XFGloss.Droid.Library.Init(Android.Content.Context,Android.OS.Bundle)">
            <summary>
            Initializer to be called from XFGloss Android client project to insure the XFGloss library is inclued in the
            client project's build.
            </summary>
            <param name="context">Context.</param>
            <param name="bundle">Bundle.</param>
        </member>
        <member name="T:XFGloss.Droid.Drawables.XFGlossPaintDrawable">
            <summary>
            A custom <see cref="T:Android.Graphics.Drawables.ShapeDrawable.PaintDrawable"/> implementation to handle initial 
            setup of the paint drawable, storage of needed properties and convenient access to updating the rotation and
            steps properties of the gradient fill.
            </summary>
        </member>
        <member name="M:XFGloss.Droid.Drawables.XFGlossPaintDrawable.#ctor(XFGloss.Gradient)">
            <summary>
            Initializes a new instance of the <see cref="T:XFGloss.Droid.Drawables.XFGlossPaintDrawable"/> class.
            </summary>
            <param name="xfgGradient">The <see cref="T:XFGloss.Gradient"/> instance whose properties should be 
            implemented by this renderer.</param>
        </member>
        <member name="M:XFGloss.Droid.Drawables.XFGlossPaintDrawable.UpdateSteps(XFGloss.GradientStepCollection)">
            <summary>
            Provides public access to update the <see cref="T:XFGloss.GradientStepCollection"/> of
            <see cref="T:XFGloss.GradientStep"/> instances for an existing gradient fill.
            </summary>
            <param name="steps">The new gradient steps to be applied to the existing gradient fill</param>
        </member>
        <member name="M:XFGloss.Droid.Drawables.XFGlossPaintDrawable.UpdateRotation(System.Int32)">
            <summary>
            Provides public access to update the rotation angle for an existing gradient fill.
            </summary>
            <param name="rotation">The rotation angle, an integer number between 0 and 359</param>
        </member>
        <member name="T:XFGloss.Droid.Drawables.XFGlossShaderFactory">
            <summary>
            A custom <see cref="T:Android.Graphics.Drawables.ShapeDrawable.ShaderFactory"/> implementation to handle 
            updating the linear gradient's properties whenever the associated view is resized.
            </summary>
        </member>
        <member name="M:XFGloss.Droid.Drawables.XFGlossShaderFactory.#ctor(XFGloss.Gradient,Android.Graphics.Matrix)">
            <summary>
            Initializes a new instance of the <see cref="T:XFGloss.Droid.Drawables.XFGlossShaderFactory"/> class.
            </summary>
            <param name="xfgGradient">The <see cref="T:XFGloss.Gradient"/> instance being applied</param>
            <param name="shaderMatrix">The shared/common <see cref="T:Android.Graphics.Matrix"/> being applied</param>
        </member>
        <member name="M:XFGloss.Droid.Drawables.XFGlossShaderFactory.Dispose(System.Boolean)">
            <summary>
            Should be called when this instance is no longer needed so it can be prepared for garbage collection.
            </summary>
            <param name="disposing">If set to <c>true</c>, references to other properties should be cleared</param>
        </member>
        <member name="M:XFGloss.Droid.Drawables.XFGlossShaderFactory.Resize(System.Int32,System.Int32)">
            <summary>
            Called by the shader factory base class whenever the associated <see cref="T:Android.Views.View"/> is
            resized. Returns a new <see cref="T:Android.Graphics.Shader"/> instance that takes the view's new dimensions
            into account.
            </summary>
            <param name="width">The view's new width</param>
            <param name="height">The view's new height</param>
        </member>
        <member name="M:XFGloss.Droid.Drawables.XFGlossShaderFactory.UpdateRotation(Android.Graphics.Shader,System.Single,System.Single,System.Int32)">
            <summary>
            Updates the gradient shader's rotation angle without requiring a new shader to be instantiated. 
            </summary>
            <param name="shader">The existing LinearGradient shader</param>
            <param name="width">The associated view's current width</param>
            <param name="height">The associated view's current height</param>
            <param name="rotation">The new rotation angle to be applied</param>
        </member>
    </members>
</doc>
