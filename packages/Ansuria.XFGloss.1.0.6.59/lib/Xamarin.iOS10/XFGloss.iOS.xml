<?xml version="1.0"?>
<doc>
    <assembly>
        <name>XFGloss.iOS</name>
    </assembly>
    <members>
        <member name="T:XFGloss.iOS.Renderers.iOSXFGlossCellRenderer">
            <summary>
            The iOS platform-specific XFGlossRenderer base class used for all <see cref="T:Xamarin.Forms.Cell"/> types.
            </summary>
        </member>
        <member name="M:XFGloss.iOS.Renderers.iOSXFGlossCellRenderer.CreateNativeElement``1(System.String,``0)">
            <summary>
            Implementation of method required by the <see cref="T:XFGloss.IXFGlossRenderer"/> interface that the
            <see cref="T:XFGloss.IGradientRenderer"/> interface extends. Applies the passed 
            <see cref="T:XFGloss.XFGlossElement"/> properties to the iOS UITableViewCell controls.
            </summary>
            <param name="propertyName">The name of the XFGloss attached BindableProperty that changed</param>
            <param name="element">The <see cref="T:XFGloss.XFGlossElement"/> instance that changed</param>
            <typeparam name="TElement">The type <see cref="T:XFGloss.XFGlossElement"/> that changed</typeparam>
        </member>
        <member name="M:XFGloss.iOS.Renderers.iOSXFGlossCellRenderer.CanUpdate(System.String)">
            <summary>
            Implementation of method required by the <see cref="T:XFGloss.IXFGlossRenderer"/> interface that the
            <see cref="T:XFGloss.IGradientRenderer"/> interface extends. Indicates if there is an existing 
            implementation of the property specified by the propertyName parameter.
            </summary>
            <returns><c>true</c>, if an existing implementation is found, <c>false</c> otherwise.</returns>
            <param name="propertyName">The name of the XFGloss attached BindableProperty that changed</param>
        </member>
        <member name="M:XFGloss.iOS.Renderers.iOSXFGlossCellRenderer.RemoveNativeElement(System.String)">
            <summary>
            Implementation of method required by the <see cref="T:XFGloss.IXFGlossRenderer"/> interface that the
            <see cref="T:XFGloss.IGradientRenderer"/> interface extends. Removes any existing implementation of
            the property specified by the propertyName parameter.
            </summary>
            <param name="propertyName">The name of the XFGloss attached BindableProperty that changed</param>
        </member>
        <member name="M:XFGloss.iOS.Renderers.iOSXFGlossCellRenderer.UpdateRotation(System.String,System.Int32)">
            <summary>
            Implementation of method required by the <see cref="T:XFGloss.IGradientRenderer"/> interface. Updates
            the rotation angle being used by any existing implementation of the property specified by the propertyName
            parameter.
            </summary>
            <param name="propertyName">The name of the XFGloss attached BindableProperty that changed</param>
            <param name="rotation">The new rotation value, an integer number between 0 and 359</param>
        </member>
        <member name="M:XFGloss.iOS.Renderers.iOSXFGlossCellRenderer.UpdateSteps(System.String,XFGloss.GradientStepCollection)">
            <summary>
            Implementation of method required by the <see cref="T:XFGloss.IGradientRenderer"/> interface. Updates
            the gradient fill steps being used by any existing implementation of the property specified by the 
            propertyName parameter.
            </summary>
            <param name="propertyName">The name of the XFGloss attached BindableProperty that changed</param>
            <param name="steps">The new collection of <see cref="T:XFGloss.GradientStep"/> instances that specify the
            colors and positions of each step of the gradient fill</param>
        </member>
        <member name="M:XFGloss.iOS.Renderers.iOSXFGlossCellRenderer.CreateBackgroundGradientView(UIKit.UITableViewCell,XFGloss.Gradient)">
            <summary>
            Creates a new <see cref="T:XFGloss.iOS.Views.UIBackgroundGradientView"/> instance and assigns it as the
            background view to the passed UITableViewCell instance.
            </summary>
            <returns>The new <see cref="T:XFGloss.iOS.Views.UIBackgroundGradientView"/> instance</returns>
            <param name="nativeCell">The native UITableViewCell instance to attach the gradient view to</param>
            <param name="gradient">The <see cref="T:XFGloss.Gradient"/> instance to copy properties from</param>
        </member>
        <member name="M:XFGloss.iOS.Renderers.iOSXFGlossCellRenderer.GetBackgroundGradientView(UIKit.UITableViewCell)">
            <summary>
            Private helper method used to find and return a previously-created 
            <see cref="T:XFGloss.iOS.Views.UIBackgroundGradientView"/> instance if found, null if not found.
            </summary>
            <returns>The background gradient view if found, null if not.</returns>
            <param name="nativeCell">The native UITableViewCell view used to display the cell contents</param>
        </member>
        <member name="M:XFGloss.iOS.Renderers.iOSXFGlossCellRenderer.RemoveBackgroundGradientView(UIKit.UITableViewCell)">
            <summary>
            Private helper method used to remove any previously-created 
            <see cref="T:XFGloss.iOS.Views.UIBackgroundGradientView"/> instance if found.
            </summary>
            <param name="nativeCell">The native iOS UITableViewCell used to display the cell contents</param>
        </member>
        <member name="M:XFGloss.iOS.Renderers.iOSXFGlossCellRenderer.UpdateProperties(Xamarin.Forms.Cell,UIKit.UITableViewCell)">
            <summary>
            Static method called by custom Xamarin.Forms renderers, used to direct the call to the cross-platform base 
            class and provide the required <see cref="T:XFGloss.XFGlossCellRenderer"/> factory method.
            </summary>
            <param name="cell">The associated <see cref="T:Xamarin.Forms.Cell"/> instance</param>
            <param name="nativeCell">The native UITableViewCell used to display the cell contents</param>
        </member>
        <member name="M:XFGloss.iOS.Renderers.iOSXFGlossCellRenderer.UpdateProperties(Xamarin.Forms.Cell,UIKit.UITableViewCell,System.String)">
            <summary>
            Implementation of the cross-platform base class's abstract UpdateProperties method. Used to apply the
            XFGloss attached BindableProperty values for the property specified by the propertyName parameter.
            </summary>
            <param name="cell">The associated <see cref="T:Xamarin.Forms.Cell"/> instance</param>
            <param name="nativeCell">The native UITableViewCell used to display the cell contents</param>
            <param name="propertyName">The name of the XFGloss attached BindableProperty that changed</param>
        </member>
        <member name="T:XFGloss.iOS.Renderers.iOSXFGlossCellRenderer.UIBackgroundColorView">
            <summary>
            A marker class used to confirm if an instance is assigned to the UINativeCell.BackgroundView property
            </summary>
        </member>
        <member name="T:XFGloss.iOS.Renderers.iOSXFGlossAccessoryCellRenderer">
            <summary>
            The iOS platform-specific XFGloss cell renderer class used for the <see cref="T:Xamarin.Forms.Cell"/> based
            classes that support customizing the accessory view on the iOS platform.
            </summary>
        </member>
        <member name="M:XFGloss.iOS.Renderers.iOSXFGlossAccessoryCellRenderer.UpdateProperties(Xamarin.Forms.Cell,UIKit.UITableViewCell)">
            <summary>
            Static method called by the custom <see cref="T:Xamarin.Forms.Cell"/> renderer, used to direct the 
            call to the cross-platform base class and provide the required 
            <see cref="T:XFGloss.XFGlossCellRenderer"/> factory method. Hides the
            <see cref="T:XFGloss.iOS.Renderers.iOSXFGlossCellRenderer"/> base class's implementation of this method.
            </summary>
            <param name="cell">The associated <see cref="T:Xamarin.Forms.Cell"/> instance</param>
            <param name="nativeCell">The native UITableViewCell used to display the cell contents</param>
        </member>
        <member name="M:XFGloss.iOS.Renderers.iOSXFGlossAccessoryCellRenderer.ElementPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Override of the <see cref="T:XFGloss.iOS.Renderers.iOSXFGlossCellRenderer"/> base class's implementation
            of the ElementPropertyChanged method, checks the <see cref="T:XFGloss.CellGloss.AccessoryType"/> property
            </summary>
            <param name="sender">The object instance the notification was received from</param>
            <param name="args">The PropertyChanged event arguments</param>
        </member>
        <member name="M:XFGloss.iOS.Renderers.iOSXFGlossAccessoryCellRenderer.UpdateProperties(Xamarin.Forms.Cell,UIKit.UITableViewCell,System.String)">
            <summary>
            Override of the <see cref="T:XFGloss.iOS.Renderers.iOSXFGlossCellRenderer"/> base class's implementation
            of the UpdateProperties method, applies any <see cref="T:XFGloss.CellGloss.AccessoryType"/> property changes
            to the native UITableViewCell.
            </summary>
            <param name="cell">Cell.</param>
            <param name="nativeCell">Native cell.</param>
            <param name="propertyName">Property name.</param>
        </member>
        <member name="T:XFGloss.iOS.Renderers.iOSXFGlossAccessoryCellRenderer.EditIndicatorView">
            <summary>
            Class used to render our custom "EditingIndicator" accessory view type
            </summary>
        </member>
        <member name="T:XFGloss.iOS.Renderers.iOSXFGlossSwitchCellRenderer">
            <summary>
            The iOS platform-specific XFGloss cell renderer class used for the <see cref="T:Xamarin.Forms.SwitchCell"/>
            class.
            </summary>
        </member>
        <member name="M:XFGloss.iOS.Renderers.iOSXFGlossSwitchCellRenderer.#ctor(Xamarin.Forms.BindableObject)">
            <summary>
            Initializes a new instance of the <see cref="T:XFGloss.iOS.Renderers.iOSXFGlossSwitchCellRenderer"/> class.
            </summary>
            <param name="bindable">Bindable.</param>
        </member>
        <member name="M:XFGloss.iOS.Renderers.iOSXFGlossSwitchCellRenderer.UpdateProperties(Xamarin.Forms.Cell,UIKit.UITableViewCell)">
            <summary>
            Static method called by the custom <see cref="T:Xamarin.Forms.SwitchCell"/> renderer, used to direct the 
            call to the cross-platform base class and provide the required 
            <see cref="T:XFGloss.XFGlossCellRenderer"/> factory method. Hides the
            <see cref="T:XFGloss.iOS.Renderers.iOSXFGlossCellRenderer"/> base class's implementation of this method.
            </summary>
            <param name="cell">The associated <see cref="T:Xamarin.Forms.Cell"/> instance</param>
            <param name="nativeCell">The native iOS UITableViewCell used to display the cell contents</param>
        </member>
        <member name="M:XFGloss.iOS.Renderers.iOSXFGlossSwitchCellRenderer.ElementPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Override of the <see cref="T:XFGloss.iOS.Renderers.iOSXFGlossCellRenderer"/> base class's implementation
            of the ElementPropertyChanged method, checks the XFGloss properties that are unique to the 
            <see cref="T:Xamarin.Forms.SwitchCell"/> class.
            </summary>
            <param name="sender">The object instance the notification was received from</param>
            <param name="args">The PropertyChanged event arguments</param>
        </member>
        <member name="M:XFGloss.iOS.Renderers.iOSXFGlossSwitchCellRenderer.UpdateProperties(Xamarin.Forms.Cell,UIKit.UITableViewCell,System.String)">
            <summary>
            Override of the <see cref="T:XFGloss.iOS.Renderers.iOSXFGlossCellRenderer"/> base class's implementation
            of the UpdateProperties method, applies XFGloss property changes that are unique to the 
            <see cref="T:Xamarin.Forms.SwitchCell"/> class.
            </summary>
            <param name="cell">Cell.</param>
            <param name="nativeCell">Native cell.</param>
            <param name="propertyName">Property name.</param>
        </member>
        <member name="T:XFGloss.iOS.Renderers.XFGlossEntryCellRenderer">
            <summary>
            Custom <see cref="T:Xamarin.Forms.EntryCellRenderer"/>-based renderer class used to apply the custom XFGloss
            properties to the iOS platform-specific implementation
            </summary>
        </member>
        <member name="M:XFGloss.iOS.Renderers.XFGlossEntryCellRenderer.GetCell(Xamarin.Forms.Cell,UIKit.UITableViewCell,UIKit.UITableView)">
            <summary>
            Override of the <see cref="T:Xamarin.Forms.Platform.iOS.EntryCellRenderer"/> GetCell method, used to apply any custom 
            settings to the iOS platform-specific cell display element.
            </summary>
            <returns>The iOS platform-specific cell display element after applying any custom settings to it</returns>
            <param name="item">The <see cref="T:Xamarin.Forms.Cell"/> instance whose properties need to be transferred 
            from</param>
            <param name="reusableCell">A previously-created iOS UITableViewCell if this cell has been rendered before
            </param>
            <param name="tv">The parent iOS UITableView</param>
        </member>
        <member name="T:XFGloss.iOS.Renderers.XFGlossSwitchCellRenderer">
            <summary>
            Custom <see cref="T:Xamarin.Forms.SwitchCellRenderer"/>-based renderer class used to apply the custom XFGloss
            properties to the iOS platform-specific implementation
            </summary>
        </member>
        <member name="M:XFGloss.iOS.Renderers.XFGlossSwitchCellRenderer.GetCell(Xamarin.Forms.Cell,UIKit.UITableViewCell,UIKit.UITableView)">
            <summary>
            Override of the <see cref="T:Xamarin.Forms.Platform.iOS.SwitchCellRenderer"/> GetCell method, used to apply any custom 
            settings to the iOS platform-specific cell display element.
            </summary>
            <returns>The iOS platform-specific cell display element after applying any custom settings to it</returns>
            <param name="item">The <see cref="T:Xamarin.Forms.Cell"/> instance whose properties need to be transferred 
            from</param>
            <param name="reusableCell">A previously-created iOS UITableViewCell if this cell has been rendered before
            </param>
            <param name="tv">The parent iOS UITableView</param>
        </member>
        <member name="T:XFGloss.iOS.Renderers.XFGlossTextCellRenderer">
            <summary>
            Custom <see cref="T:Xamarin.Forms.TextCellRenderer"/>-based renderer class used to apply the custom XFGloss
            properties to the iOS platform-specific implementation
            </summary>
        </member>
        <member name="M:XFGloss.iOS.Renderers.XFGlossTextCellRenderer.GetCell(Xamarin.Forms.Cell,UIKit.UITableViewCell,UIKit.UITableView)">
            <summary>
            Override of the <see cref="T:Xamarin.Forms.Platform.iOS.TextCellRenderer"/> GetCell method, used to apply any custom 
            settings to the iOS platform-specific cell display element.
            </summary>
            <returns>The iOS platform-specific cell display element after applying any custom settings to it</returns>
            <param name="item">The <see cref="T:Xamarin.Forms.Cell"/> instance whose properties need to be transferred 
            from</param>
            <param name="reusableCell">A previously-created iOS UITableViewCell if this cell has been rendered before
            </param>
            <param name="tv">The parent iOS UITableView</param>
        </member>
        <member name="T:XFGloss.iOS.Renderers.XFGlossImageCellRenderer">
            <summary>
            Custom <see cref="T:Xamarin.Forms.ImageCellRenderer"/>-based renderer class used to apply the custom XFGloss
            properties to the iOS platform-specific implementation
            </summary>
        </member>
        <member name="M:XFGloss.iOS.Renderers.XFGlossImageCellRenderer.GetCell(Xamarin.Forms.Cell,UIKit.UITableViewCell,UIKit.UITableView)">
            <summary>
            Override of the <see cref="T:Xamarin.Forms.Platform.iOS.ImageCellRenderer"/> GetCell method, used to apply any custom 
            settings to the iOS platform-specific cell display element.
            </summary>
            <returns>The iOS platform-specific cell display element after applying any custom settings to it</returns>
            <param name="item">The <see cref="T:Xamarin.Forms.Cell"/> instance whose properties need to be transferred 
            from</param>
            <param name="reusableCell">A previously-created iOS UITableViewCell if this cell has been rendered before
            </param>
            <param name="tv">The parent iOS UITableView</param>
        </member>
        <member name="T:XFGloss.iOS.Renderers.XFGlossViewCellRenderer">
            <summary>
            Custom <see cref="T:Xamarin.Forms.ViewCellRenderer"/>-based renderer class used to apply the custom XFGloss
            properties to the iOS platform-specific implementation
            </summary>
        </member>
        <member name="M:XFGloss.iOS.Renderers.XFGlossViewCellRenderer.GetCell(Xamarin.Forms.Cell,UIKit.UITableViewCell,UIKit.UITableView)">
            <summary>
            Override of the <see cref="T:Xamarin.Forms.Platform.iOS.ViewCellRenderer"/> GetCell method, used to apply any custom 
            settings to the iOS platform-specific cell display element.
            </summary>
            <returns>The iOS platform-specific cell display element after applying any custom settings to it</returns>
            <param name="item">The <see cref="T:Xamarin.Forms.Cell"/> instance whose properties need to be transferred 
            from</param>
            <param name="reusableCell">A previously-created iOS UITableViewCell if this cell has been rendered before
            </param>
            <param name="tv">The parent iOS UITableView</param>
        </member>
        <member name="T:XFGloss.iOS.Renderers.XFGlossSwitchRenderer">
            <summary>
            The iOS platform-specific Xamarin.Forms renderer used for all <see cref="T:Xamarin.Forms.Switch"/>
            derived classes.
            </summary>
        </member>
        <member name="M:XFGloss.iOS.Renderers.XFGlossSwitchRenderer.OnElementChanged(Xamarin.Forms.Platform.iOS.ElementChangedEventArgs{Xamarin.Forms.Switch})">
            <summary>
            <see cref="T:Xamarin.Forms.Platform.iOS.SwitchRenderer"/> override that is called whenever the associated
            <see cref="T:Xamarin.Forms.Switch"/> instance changes
            </summary>
            <param name="e"><see cref="T:Xamarin.Forms.Platform.iOS.ElementChangedEventArgs"/> that specifies the
            previously and newly assigned <see cref="T:Xamarin.Forms.Switch"/> instances
            </param>
        </member>
        <member name="M:XFGloss.iOS.Renderers.XFGlossSwitchRenderer.OnElementPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            <see cref="T:Xamarin.Forms.Platform.iOS.SwitchRenderer"/> override that is called whenever the
            <see cref="T:Xamarin.Forms.Switch.PropertyChanged"/> event is fired
            </summary>
            <param name="sender">Sender.</param>
            <param name="e">E.</param>
        </member>
        <member name="T:XFGloss.iOS.Renderers.XFGlossContentPageRenderer">
            <summary>
            The iOS platform-specific Xamarin.Forms renderer used for all <see cref="T:Xamarin.Forms.ContentPage"/>
            derived classes. Also implements the <see cref="T:XFGloss.IGradientRenderer"/> interface to support the added
            BackgroundGradient XFGloss property.
            </summary>
        </member>
        <member name="M:XFGloss.iOS.Renderers.XFGlossContentPageRenderer.CreateNativeElement``1(System.String,``0)">
            <summary>
            Implementation of method required by the <see cref="T:XFGloss.IXFGlossRenderer"/> interface that the
            <see cref="T:XFGloss.IGradientRenderer"/> interface extends. Applies the passed 
            <see cref="T:XFGloss.XFGlossElement"/> properties to the iOS UIView.
            </summary>
            <param name="propertyName">The name of the XFGloss attached BindableProperty that changed</param>
            <param name="element">The <see cref="T:XFGloss.XFGlossElement"/> instance that changed</param>
            <typeparam name="TElement">The type <see cref="T:XFGloss.XFGlossElement"/> that changed</typeparam>
        </member>
        <member name="M:XFGloss.iOS.Renderers.XFGlossContentPageRenderer.CanUpdate(System.String)">
            <summary>
            Implementation of method required by the <see cref="T:XFGloss.IXFGlossRenderer"/> interface that the
            <see cref="T:XFGloss.IGradientRenderer"/> interface extends. Indicates if there is an existing 
            implementation of the property specified by the propertyName parameter.
            </summary>
            <returns><c>true</c>, if an existing implementation is found, <c>false</c> otherwise.</returns>
            <param name="propertyName">The name of the XFGloss attached BindableProperty that changed</param>
        </member>
        <member name="M:XFGloss.iOS.Renderers.XFGlossContentPageRenderer.RemoveNativeElement(System.String)">
            <summary>
            Implementation of method required by the <see cref="T:XFGloss.IXFGlossRenderer"/> interface that the
            <see cref="T:XFGloss.IGradientRenderer"/> interface extends. Removes any existing implementation of
            the property specified by the propertyName parameter.
            </summary>
            <param name="propertyName">The name of the XFGloss attached BindableProperty that changed</param>
        </member>
        <member name="M:XFGloss.iOS.Renderers.XFGlossContentPageRenderer.UpdateRotation(System.String,System.Int32)">
            <summary>
            Implementation of method required by the <see cref="T:XFGloss.IGradientRenderer"/> interface. Updates
            the rotation angle being used by any existing implementation of the property specified by the propertyName
            parameter.
            </summary>
            <param name="propertyName">The name of the XFGloss attached BindableProperty that changed</param>
            <param name="rotation">The new rotation value, an integer number between 0 and 359</param>
        </member>
        <member name="M:XFGloss.iOS.Renderers.XFGlossContentPageRenderer.UpdateSteps(System.String,XFGloss.GradientStepCollection)">
            <summary>
            Implementation of method required by the <see cref="T:XFGloss.IGradientRenderer"/> interface. Updates
            the gradient fill steps being used by any existing implementation of the property specified by the 
            propertyName parameter.
            </summary>
            <param name="propertyName">The name of the XFGloss attached BindableProperty that changed</param>
            <param name="steps">The new collection of <see cref="T:XFGloss.GradientStep"/> instances that specify the
            colors and positions of each step of the gradient fill</param>
        </member>
        <member name="M:XFGloss.iOS.Renderers.XFGlossContentPageRenderer.Dispose(System.Boolean)">
            <summary>
            Dispose any created resources and prepare the instance for garbage collection
            </summary>
            <param name="disposing">If set to <c>true</c>, dispose any created resources</param>
        </member>
        <member name="M:XFGloss.iOS.Renderers.XFGlossContentPageRenderer.ViewDidLayoutSubviews">
            <summary>
            Override of the UIViewController method to update the background gradient layer size whenever view layout 
            changes occur.
            </summary>
        </member>
        <member name="M:XFGloss.iOS.Renderers.XFGlossContentPageRenderer.OnElementChanged(Xamarin.Forms.Platform.iOS.VisualElementChangedEventArgs)">
            <summary>
            <see cref="T:Xamarin.Forms.Platform.iOS.PageRenderer"/> override that is called whenever the associated
            <see cref="T:Xamarin.Forms.ContentPage"/> instance changes
            </summary>
            <param name="e"><see cref="T:Xamarin.Forms.Platform.iOS.VisualElementChangedEventArgs"/> that specifies the
            previously and newly assigned <see cref="T:Xamarin.Forms.ContentPage"/> instances
            </param>
        </member>
        <member name="M:XFGloss.iOS.Renderers.XFGlossContentPageRenderer.OnElementPropertyChanging(System.Object,Xamarin.Forms.PropertyChangingEventArgs)">
            <summary>
            Private event handler that is called whenever a <see cref="T:Xamarin.Forms.BindableObject.PropertyChanging"/> 
            event is fired.
            </summary>
            <param name="sender">Sender.</param>
            <param name="args">Property changing event arguments</param>
        </member>
        <member name="M:XFGloss.iOS.Renderers.XFGlossContentPageRenderer.OnElementPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            <see cref="T:Xamarin.Forms.Platform.iOS.PageRenderer"/> override that is called whenever the
            <see cref="T:Xamarin.Forms.ContentPage.PropertyChanged"/> event is fired
            </summary>
            <param name="sender">Sender.</param>
            <param name="args">Property changing event arguments</param>
        </member>
        <member name="T:XFGloss.iOS.Renderers.XFGlossSliderRenderer">
            <summary>
            The iOS platform-specific Xamarin.Forms renderer used for all <see cref="T:Xamarin.Forms.Slider"/>
            derived classes.
            </summary>
        </member>
        <member name="M:XFGloss.iOS.Renderers.XFGlossSliderRenderer.OnElementChanged(Xamarin.Forms.Platform.iOS.ElementChangedEventArgs{Xamarin.Forms.Slider})">
            <summary>
            <see cref="T:Xamarin.Forms.Platform.iOS.SliderRenderer"/> override that is called whenever the associated
            <see cref="T:Xamarin.Forms.Slider"/> instance changes
            </summary>
            <param name="e"><see cref="T:Xamarin.Forms.Platform.iOS.ElementChangedEventArgs"/> that specifies the
            previously and newly assigned <see cref="T:Xamarin.Forms.Slider"/> instances
            </param>
        </member>
        <member name="M:XFGloss.iOS.Renderers.XFGlossSliderRenderer.OnElementPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            <see cref="T:Xamarin.Forms.Platform.iOS.SliderRenderer"/> override that is called whenever the
            <see cref="T:Xamarin.Forms.Slider.PropertyChanged"/> event is fired
            </summary>
            <param name="sender">Sender.</param>
            <param name="e">E.</param>
        </member>
        <member name="M:XFGloss.iOS.Renderers.XFGlossSliderRenderer.UpdateSliderProperties(System.String)">
            <summary>
            Private helper method used to apply the <see cref="T:Xamarin.Forms.Slider"/> properties to the native
            <see cref="T:UIKit.UISlider"/> control.
            </summary>
            <param name="propertyName">Name of the <see cref="T:XFGloss.SliderGloss"/> property whose value changed</param>
        </member>
        <member name="T:XFGloss.iOS.Extensions.XFGlossUISwitchExtensions">
            <summary>
            Extension methods for the <see cref="T:Xamarin.Forms.Switch"/> control to apply the
            <see cref="T:Xamarin.Forms.Color"/> values to an iOS UISwitch control
            </summary>
        </member>
        <member name="M:XFGloss.iOS.Extensions.XFGlossUISwitchExtensions.UpdateColorProperty(UIKit.UISwitch,XFGloss.ISwitchGloss,System.String)">
            <summary>
            An extension method that applies all of the current properties defined by the passed
            <see cref="T:XFGloss.ISwitchGloss"/> interface implementation to the iOS UISwitch control
            </summary>
            <param name="control">Control.</param>
            <param name="properties">Properties.</param>
            <param name="propertyName">Property name.</param>
        </member>
        <member name="T:XFGloss.iOS.Library">
            <summary>
            Library class used to provide static initializer to be called from XFGloss iOS client projects to insure
            the XFGloss library is included in the client project's build.
            </summary>
        </member>
        <member name="M:XFGloss.iOS.Library.Init">
            <summary>
            Initializer to be called from XFGloss iOS client project to insure the XFGloss library is inclued in the
            client project's build.
            </summary>
        </member>
        <member name="T:XFGloss.iOS.Views.UIBackgroundGradientView">
            <summary>
            UIBackgroundGradientView is a helper class used to resize background gradient layer when the cell size changes.
            This class is NOT used in the ContentPage renderer. The XFGlossGradientLayer is directly attached to the page's
            main view in that case.
            </summary>
        </member>
        <member name="M:XFGloss.iOS.Views.UIBackgroundGradientView.#ctor(CoreGraphics.CGRect,XFGloss.Gradient)">
            <summary>
            Initializes a new instance of the <see cref="T:XFGloss.iOS.Views.UIBackgroundGradientView"/> class.
            </summary>
            <param name="rect">Rect.</param>
            <param name="gradientSource">Gradient source.</param>
        </member>
        <member name="M:XFGloss.iOS.Views.UIBackgroundGradientView.Dispose(System.Boolean)">
            <summary>
            Dispose any created resources and prepare the instance for garbage collection
            </summary>
            <param name="disposing">If set to <c>true</c>, dispose any created resources</param>
        </member>
        <member name="M:XFGloss.iOS.Views.UIBackgroundGradientView.LayoutSubviews">
            <summary>
            UIView override to update our gradient layer's size to match our view's bounds whenever the bounds are 
            changing
            </summary>
        </member>
        <member name="M:XFGloss.iOS.Views.UIBackgroundGradientView.UpdateRotation(System.Int32)">
            <summary>
            Updates the associated <see cref="T:XFGloss.iOS.Views.XFGlossGradientLayer"/> instance's rotation value.
            </summary>
            <param name="rotation">An integer number between 0 and 359</param>
        </member>
        <member name="M:XFGloss.iOS.Views.UIBackgroundGradientView.UpdateSteps(XFGloss.GradientStepCollection)">
            <summary>
            Updates the associated <see cref="T:XFGloss.iOS.Views.XFGlossGradientLayer"/> instance's steps collection.
            </summary>
            <param name="steps">The steps collection to assign</param>
        </member>
        <member name="T:XFGloss.iOS.Views.XFGlossGradientLayer">
            <summary>
            A <see cref="T:CoreAnimation.CAGradientLayer"/> derived class that implements the gradient fill on the iOS
            platform
            </summary>
        </member>
        <member name="M:XFGloss.iOS.Views.XFGlossGradientLayer.CreateGradientLayer(UIKit.UIView,XFGloss.Gradient)">
            <summary>
            Creates a new gradient layer and inserts it as a subview if a gradient layer doesn't already exist.
            If one does exist, the existing one is updated.
            </summary>
            <param name="view">The native view the gradient fill is being applied to</param>
            <param name="gradient">The <see cref="T:XFGloss.Gradient"/> instance to copy the fill parameters from</param>
        </member>
        <member name="M:XFGloss.iOS.Views.XFGlossGradientLayer.RemoveGradientLayer(UIKit.UIView)">
            <summary>
            Removes a previously-created <see cref="T:XFGloss.iOS.XFGlossGradientLayer"/> instance if found
            </summary>
            <param name="view">The native view that the gradient layer is expected to be attached to</param>
        </member>
        <member name="M:XFGloss.iOS.Views.XFGlossGradientLayer.GetGradientLayer(UIKit.UIView)">
            <summary>
            Attempts to locate and return a previously-created <see cref="T:XFGloss.iOS.XFGlossGradientLayer"/> instance
            </summary>
            <returns>The <see cref="T:XFGloss.iOS.XFGlossGradientLayer"/> instance if found</returns>
            <param name="view">The native view that the gradient layer is expected to be attached to</param>
        </member>
        <member name="M:XFGloss.iOS.Views.XFGlossGradientLayer.ToCGColors(XFGloss.GradientStepCollection)">
            <summary>
            Helper function that converts a list of Xamarin.Forms.Color instances to iOS CGColor instances
            </summary>
            <returns>An array of CGColor instances</returns>
            <param name="steps">The colection of <see cref="T:XFGloss.GradientStep"/> instances to be converted</param>
        </member>
        <member name="M:XFGloss.iOS.Views.XFGlossGradientLayer.ToNSNumbers(XFGloss.GradientStepCollection)">
            <summary>
            Helper function that converts a list of step percentages to NSNumbers
            </summary>
            <returns>An array of NSNumber instances</returns>
            <param name="steps">The colection of <see cref="T:XFGloss.GradientStep"/> instances to be converted</param>
        </member>
        <member name="M:XFGloss.iOS.Views.XFGlossGradientLayer.#ctor(UIKit.UIView,XFGloss.Gradient)">
            <summary>
            Initializes a new instance of the <see cref="T:XFGloss.iOS.Views.XFGlossGradientLayer"/> class.
            </summary>
            <param name="gradientView">The native UIView to attach the gradient layer to</param>
            <param name="gradient">The <see cref="T:XFGloss.Gradient"/> instance to copy property values from</param>
        </member>
        <member name="M:XFGloss.iOS.Views.XFGlossGradientLayer.Dispose(System.Boolean)">
            <summary>
            Dispose any created resources and prepare the instance for garbage collection
            </summary>
            <param name="disposing">If set to <c>true</c>, dispose any created resources</param>
        </member>
        <member name="P:XFGloss.iOS.Views.XFGlossGradientLayer.GradientSource">
            <summary>
            Gets or sets the gradient source.
            </summary>
            <value>The <see cref="T:XFGloss.Gradient"/> source.</value>
        </member>
        <member name="M:XFGloss.iOS.Views.XFGlossGradientLayer.UpdateGradientLayerParams(XFGloss.Gradient)">
            <summary>
            Updates an existing gradient layer's parameters, if found, from the provided <see cref="T:XFGloss.Gradient"/>
            instance.
            </summary>
            <param name="gradient">Gradient.</param>
        </member>
        <member name="M:XFGloss.iOS.Views.XFGlossGradientLayer.UpdateRotation(System.Int32)">
            <summary>
            Updates an existing gradient layer's rotation value, if found.
            </summary>
            <param name="rotation">An integer number between 0 and 359</param>
        </member>
        <member name="M:XFGloss.iOS.Views.XFGlossGradientLayer.UpdateSteps(XFGloss.GradientStepCollection)">
            <summary>
            Updates an existing gradient layer's colors and position percentage values, if found
            </summary>
            <param name="steps">The <see cref="T:XFGloss.GradientStepCollection"/> of 
            <see cref="T:XFGloss.GradientStep"/> instances</param>
        </member>
    </members>
</doc>
